name: .NET

on:
  push:
    branches: 
        - 'main'

env:
	CLWEBAPI_REPOSITORY: clwebapi_repository
  AWS_REGION: us-east-2

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x

    - name: Restore dependencies 
      run: cd CLWebAPI && dotnet restore

    - name: Build
      run: cd CLWebAPI && dotnet build --no-restore

    - name: Test
      run: cd CLWebAPI && dotnet test --no-build --verbosity normal

    - name: Core Tests Report
      uses: zyborg/dotnet-tests-report@v1
      with:
        project_path: CLWebAPI/Tests/Tests.csproj
        report_name: github_actions_example_test_report
        report_title: Github Action Test Test Report
        github_token: ${{ secrets.GITHUB_TOKEN }}    

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@13d241b293754004c80624b5567555c4a39ffbe3
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
		
    - name: Build, tag, and push choreography service image to Amazon ECR
      id: build-choreography-service-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        # Build a docker container and
        # push it to ECR so that it can
        # be deployed to ECS.
        docker build -t $ECR_REGISTRY/$CLWEBAPI_REPOSITORY:$IMAGE_TAG -f CLWebApi.Dockerfile .
        docker push $ECR_REGISTRY/$CLWEBAPI_REPOSITORY:$IMAGE_TAG
        echo "::set-output name=image::$ECR_REGISTRY/$CLWEBAPI_REPOSITORY:$IMAGE_TAG"